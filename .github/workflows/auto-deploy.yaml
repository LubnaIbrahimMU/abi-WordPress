name: Deploy WordPress

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
    
      - name: Package repo
        run: |
          git archive --format=tar.gz -o app_$(date +"%Y-%m-%d").tar.gz HEAD

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      # - name: Deploy to Auto Scaling Group
      #   run: |
      #     instance_ids=$(aws autoscaling describe-auto-scaling-groups --auto-scaling-group-name lu --query 'AutoScalingGroups[].Instances[].InstanceId' --output text)
      #     echo "Instance IDs: $instance_ids"
      - name: Run AWS CLI command
        run: |
          instance_ids=$(aws autoscaling describe-auto-scaling-groups --auto-scaling-group-name lu --query 'AutoScalingGroups[].Instances[].InstanceId' --output text)
          echo "Instance IDs: $instance_ids"
          
          # Save the private key to a file
          
          echo "${{ secrets.KEY_PEM }}" > KEY_PEM && chmod 600 KEY_PEM
          
          for instance_id in $instance_ids; do
            public_ip=$(aws ec2 describe-instances --instance-ids $instance_id --query 'Reservations[].Instances[].PublicIpAddress' --output text)
            ssh -o StrictHostKeyChecking=no -i KEY_PEM ubuntu@$public_ip "
              cd /home/ubuntu
              aws s3 cp s3://${{ secrets.S3_BUCKET }}/app_$(date +"%Y-%m-%d").tar.gz  .
            "
          done

      - name: Set S3 bucket expiry policy
        run: |
          aws s3api put-bucket-lifecycle-configuration --bucket ${{ secrets.S3_BUCKET }} --lifecycle-configuration '{"Rules":[{"ID":"DeleteObjectsAfter7Days","Prefix":"","Status":"Enabled","Expiration":{"Days":7}}]}'
